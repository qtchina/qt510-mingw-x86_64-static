QMAKE_PRL_BUILD_DIR = /opt/mxe/tmp-qtbase-x86_64-w64-mingw32.static/qtbase-everywhere-src-5.10.1/src/plugins/platforms/windows
QMAKE_PRO_INPUT = windows.pro
QMAKE_PRL_TARGET = libqwindows.a
QMAKE_PRL_CONFIG = lex yacc depend_includepath testcase_targets import_qpa_plugin windows qt_build_extra file_copies qmake_use qt warn_on release link_prl debug_and_release cross_compile release no_plugin_manifest static win32 mingw gcc cross_compile sse2 aesni sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vbmi avx512vl compile_examples f16c largefile rdrnd shani prefix_build force_independent force_bootstrap utf8_source create_prl link_prl prepare_docs qt_docs_targets no_private_qt_headers_warning QTDIR_build qt_example_installs exceptions_off testcase_exceptions warning_clean release ReleaseBuild Release build_pass plugin relative_qt_rpath create_cmake c++11 strict_c++ c++14 c++1z release ReleaseBuild Release build_pass have_target staticlib exclusive_builds no_autoqmake thread opengl moc resources
QMAKE_PRL_LIBS = -ldwmapi -lwinspool -lrpcrt4 -L$$[QT_INSTALL_LIBS] $$[QT_INSTALL_LIBS]/libQt5EventDispatcherSupport.a -L/opt/mxe/usr/x86_64-w64-mingw32.static/lib/../lib $$[QT_INSTALL_LIBS]/libQt5FontDatabaseSupport.a $$[QT_INSTALL_LIBS]/libQt5ThemeSupport.a $$[QT_INSTALL_LIBS]/libQt5AccessibilitySupport.a $$[QT_INSTALL_LIBS]/libQt5Gui.a -lcomdlg32 -loleaut32 -limm32 -lopengl32 -lharfbuzz -lcairo -lgobject-2.0 -lfontconfig -lm -lusp10 -lmsimg32 -lgdi32 -lpixman-1 -lffi -lexpat -lfreetype -lbz2 -lpng16 -lharfbuzz_too -lfreetype_too -lglib-2.0 -lshlwapi -lpcre -lintl -liconv $$[QT_INSTALL_LIBS]/libQt5Core.a -lmpr -lnetapi32 -luserenv -lversion -lws2_32 -lkernel32 -luser32 -lshell32 -luuid -lole32 -ladvapi32 -lwinmm -lz -lpcre2-16
